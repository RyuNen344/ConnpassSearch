import dependencies.Dep
import dependencies.Packages

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

apply from: rootProject.file('gradle/android.gradle')

android {
    defaultConfig {
        applicationId Packages.name
    }

    buildTypes {
        debug {
            applicationIdSuffix Packages.debugNameSuffix
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    implementation project(":model")
    implementation project(":data:api")
    implementation project(":data:repository")
    implementation project(":core")
    implementation project(":feature:main")
    implementation project(":feature:detail")
    implementation project(":feature:webview")

    implementation 'com.github.DonaldDu:FixUnhandledEvent:1.0.1'

    implementation Dep.Kotlin.stdlibJvm
    implementation Dep.Kotlin.stdlibCommon
    implementation Dep.AndroidX.appCompat
    implementation Dep.AndroidX.coreKtx
    implementation Dep.AndroidX.constraint
    implementation Dep.AndroidX.activityKtx

    implementation Dep.AndroidX.Navigation.uiKtx
    implementation Dep.AndroidX.Navigation.fragmentKtx
    implementation Dep.AndroidX.Navigation.runtimeKtx

    implementation Dep.Kotlin.coroutines
    implementation Dep.Kotlin.coroutinesCommon

    //jsoup
    implementation 'org.jsoup:jsoup:1.12.1'

    implementation Dep.Dagger.core
    implementation Dep.Dagger.androidSupport
    kapt Dep.Dagger.compiler
    kapt Dep.Dagger.androidProcessor
    compileOnly Dep.Dagger.assistedInjectAnnotations
    kapt Dep.Dagger.assistedInjectProcessor


    testImplementation Dep.Test.junit
    testImplementation Dep.Test.kotlinTestAssertions
    testImplementation Dep.MockK.jvm
    androidTestImplementation Dep.Test.testRunner
    androidTestImplementation Dep.Test.espressoCore
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "androidx.appcompat") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "1.+"
            }
        }
    }
}
